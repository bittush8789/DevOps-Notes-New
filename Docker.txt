Docker
======>

--> It is free and open source software 
--> it is used for Containerzation

Containerzation means package our "application code + required dependencies" as single unit for execution.

==> if we use Docker in our project than we can run our project in any system without bothering about underlyig
software

1.Dockerfile -> It contains set of instructionsto build docker image
2.Docker Image :-> it is a package which contains code + dependencies
3.Docker Registry :-> It is a place where we can store our docker images
4.Docker Container :-> When we run docker image the docker container will be created. Our application will be 
executed inside docker container.


Docker Commands
================
docker images :-> To display list of docker images available in our system
docker ps :-> To display list of docker containers runing in our system
docker pull <image-id / image-name> : To download docker image
docker run <image-id /image-name> : To run docker image ( container creation )
docker rmi <image-id/name> : To delete docker image
docker rm <container-id> To delete docker container
docker system prune -a : delete stopped container and unused images
docker ps
docker logs <container-id>
docker run -d -p 9090:9090 ashokit/spring-boot-rest-api




Docker Commands 
===============> 

Part1 : BAsic Docker Commands
Part2 : Docker image Commands 
Part3 : Docker Container Commands 
part4 : Docker Network Commands 
Part 5 : Docker volume commands
part6: Docker Compose commands


$docker info
$docker version
$ docker login
$ docker logout
$ docker help


Docker image commands
====================

$ docker images
$ docker rmi <imagename>
$ docker pull < image-name>
$ docker run < imagename>
$ docker run -d -p host-port: container
$ docker tag<image-name><image-tag-name>
$ docker push <image-tag-name>
$ docker history <image-name>
$ docker image prune 

Docker Container Commands
--------------------------

$ docker ps
$ docker ps -a
$ docker stop <conatiner-id>
$ docker start < conatiner-id>
$ docker restart <conatiner-id>
$ docker rm < conatiner-id>
$ docker logs <conatiner-id>


Docker network commads
=======================
docker network ls
docker network create <network-name>
docker betwork rm<network-name>
docker network inspect<network-name>

Docker volume commands
========================
docker volume ls
docker volume create 



Docker compose commads
=======================

$ docker-compose --version
$ docker-compose up -d
$ docker-compose down
$ docker-compose ps
$ docker-compose images
$ docker-compose stop
$ docker-compose start













Data Science
============
ML engineer
Ai reasearch scientist
